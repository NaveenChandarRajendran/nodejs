Why Node js?

Node is build to run non blocking io application on javascipt.

Originally javascipt is created to run browser side, so it dont have any non blocking apis.

IO means what?
how we write read and write memory from the disk or from the network.

Generally anything is not happening in CPU is called IO.

Bllocking in the sense the delay is happend due to to io(reading an file from hard drive or network) ,due to that delay the program unable to move further operations.

When the blocking is causing an issue?
When we reacding anything through netwotk means, data from the external is stored temporary as kernal buffer and execute.

IO Models

blocking io
non blocking io
signal driven io
asynchronus io
io multiplexing
    select
    poll
    Epoll/ kqueue/iocp

io multiplexing
select api

Node js has two componetns
1) v8
2) libuv


Node REPL
It used to run js in interactive mode.

js has two types executed.

1.interactive mode -REPL mode
2. script mode - by loading script on runtime.


Node has predefined variable.
Like how browser api has document,window,history,console. These are the variable which point the class. ex. Document class,Window class,History class, etc...

same in node js we have pred efined as process.

process = new Process()

what is Process?
Process is Object which is root object in node,in browser window is root.

Process provides information about

1.Operating system
2.hardware information.


How to write non blocking apps in node

It has certain styles

1.callbacks
2.promises
3.Async Await
4.reactive programing


1.callbacks
Its an high order function which receive an function as a arguments

refer index_callback.js and index_nestedcallback.js

2. promises
we can create it by two method

1. Create Promise Object from Promise constructor
    new Promise()

2. Create Promise object from factory apis
    Promise.resolve() / Promise.reject()

Promise object methods

1.then - success
2.catch - errors
3.finally - cleanup

factory api to create Promise object
4. resolve
5. reject
....................................
6. all
7. reactive






